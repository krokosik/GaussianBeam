name: Windows Release

on:
  push:
    tags:
      - v*
  workflow_dispatch:

defaults:
  run:
    shell: cmd

env:
  SOURCE_DIR:   ${{ github.workspace }}
  QT_VERSION:   5.15.2
  ARTIFACT:     GaussianBeam.zip

jobs:
  build:
    runs-on:  windows-2019

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Get all tags for correct version determination
        working-directory:  ${{ github.workspace }}
        run: |
          git fetch --all --tags -f

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version:      ${{ env.QT_VERSION }}
          arch:         win64_mingw81
          dir:          ${{ runner.temp }}
          archives:     x86_64 qtxmlpatterns qtbase
          setup-python: false
          cache:        true

      - name: Download JOM
        uses: suisei-cn/actions-download-file@v1
        with:
          url:    http://download.qt.io/official_releases/jom/jom.zip
          target: ${{ runner.temp }}\

      - name: Unzip JOM
        working-directory: ${{ runner.temp }}
        run: 7z x jom.zip -ojom
              
      - name: Create build directory
        run:  mkdir ${{ runner.temp }}\build

      - name: Set up MinGW
        uses: egor-tensin/setup-mingw@v2
        with:
          platform: x64

      - name: Build
        working-directory: ${{ runner.temp }}\build
        run:  |
              qmake -r ${{ env.SOURCE_DIR }}\GaussianBeam.pro
              ${{ runner.temp }}\jom\jom -j2
              cd release
              windeployqt  GaussianBeam.exe --pdb --release --compiler-runtime --no-translations --no-network --no-opengl
              
      - name: Zip build
        working-directory: ${{ runner.temp }}
        run:  |
              7z a ${{ env.ARTIFACT }} ${{ runner.temp }}\build\* -r
              
      - name: (10) Save build artifact
        uses: actions/upload-artifact@master
        with:
          name: ${{ env.ARTIFACT }}
          path: ${{ runner.temp }}\${{ env.ARTIFACT }}